name: "[Job] Plan/Deploy to Account"

on:
  workflow_call:
    inputs:
      workspace_name:
        description: "The terraform workspace to target for account actions"
        required: true
        type: string
    secrets:
      aws_access_key_id:
        description: "AWS Access Key ID"
        required: true
      aws_secret_access_key:
        description: "AWS Secret Access Key"
        required: true

jobs:
  terraform_account_workflow:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.workspace_name }} account
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          terraform_wrapper: false
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGLpaStoreGithubAction

      - name: Lint Terraform
        run: terraform fmt -check -recursive
        working-directory: ./terraform/environment
        continue-on-error: true

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./terraform/environment

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
        run: |
          terraform workspace show
          echo "plan_summary=$(terraform plan -no-color -lock-timeout=300s -input=false -parallelism=30 | grep -ioE 'Plan: [[:digit:]]+ to add, [[:digit:]]+ to change, [[:digit:]]+ to destroy|No changes. Your infrastructure matches the configuration.')" >> $GITHUB_OUTPUT
          terraform plan -lock-timeout=300s -input=false -parallelism=30
        working-directory: ./terraform/environment

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./terraform/environment
