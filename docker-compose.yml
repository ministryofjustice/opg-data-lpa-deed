version: "3.6"

services:
  lambda-create:
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=create
    environment:
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: localstack
      AWS_DYNAMODB_ENDPOINT: http://localstack:4566
      AWS_EVENTBRIDGE_ENDPOINT: http://localstack:4566
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-secret}
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  lambda-update:
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=update
    environment:
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: localstack
      AWS_DYNAMODB_ENDPOINT: http://localstack:4566
      AWS_EVENTBRIDGE_ENDPOINT: http://localstack:4566
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-secret}
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  lambda-get:
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=get
    environment:
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: localstack
      AWS_DYNAMODB_ENDPOINT: http://localstack:4566
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-secret}
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  apigw:
    depends_on: [ lambda-create, lambda-update, lambda-get ]
    build:
      context: .
      dockerfile: ./mock-apigw/Dockerfile
    ports:
      - 9000:8080

  localstack:
    image: localstack/localstack:3.1
    volumes:
      - "./localstack/init:/etc/localstack/init/ready.d"
      - "./localstack/wait:/scripts/wait"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
    healthcheck:
      test: bash /scripts/wait/healthcheck.sh
      interval: 10s
      timeout: 10s
      retries: 50

  go-lint:
    image: golangci/golangci-lint:v1.56.2
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.cache/golangci-lint/v1.55.2:/root/.cache
    command: golangci-lint run --timeout 5m --out-format=github-actions ./lambda/get/... ./lambda/create/... ./lambda/update/...

  gosec:
    image: securego/gosec:2.19.0
    working_dir: /app
    volumes:
      - .:/app
    command: -exclude-dir=.gocache -fmt sarif -out /app/results.sarif /app/...

  pact-verifier:
    image: pactfoundation/pact-ref-verifier
    entrypoint:
      - pact_verifier_cli
      - --hostname=apigw
      - --port=8080
      - --base-path=/
      - --broker-url=https://pact-broker.api.opg.service.justice.gov.uk/
      - --provider-name=data-lpa-store
      - --state-change-url=http://apigw:8080/_pact_state
